// AUTO-GENERATED

#ifndef _GI_HARFBUZZ__ENUMS_HPP_
#define _GI_HARFBUZZ__ENUMS_HPP_

namespace gi {

namespace repository {

namespace HarfBuzz {

enum class aat_layout_feature_selector_t {
  INVALID_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_INVALID,
  ALL_TYPE_FEATURES_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_ALL_TYPE_FEATURES_ON,
  ALL_TYPE_FEATURES_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_ALL_TYPE_FEATURES_OFF,
  REQUIRED_LIGATURES_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_REQUIRED_LIGATURES_ON,
  REQUIRED_LIGATURES_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_REQUIRED_LIGATURES_OFF,
  COMMON_LIGATURES_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_COMMON_LIGATURES_ON,
  COMMON_LIGATURES_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_COMMON_LIGATURES_OFF,
  RARE_LIGATURES_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_RARE_LIGATURES_ON,
  RARE_LIGATURES_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_RARE_LIGATURES_OFF,
  LOGOS_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_LOGOS_ON,
  LOGOS_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_LOGOS_OFF,
  REBUS_PICTURES_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_REBUS_PICTURES_ON,
  REBUS_PICTURES_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_REBUS_PICTURES_OFF,
  DIPHTHONG_LIGATURES_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_DIPHTHONG_LIGATURES_ON,
  DIPHTHONG_LIGATURES_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_DIPHTHONG_LIGATURES_OFF,
  SQUARED_LIGATURES_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_SQUARED_LIGATURES_ON,
  SQUARED_LIGATURES_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_SQUARED_LIGATURES_OFF,
  ABBREV_SQUARED_LIGATURES_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_ABBREV_SQUARED_LIGATURES_ON,
  ABBREV_SQUARED_LIGATURES_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_ABBREV_SQUARED_LIGATURES_OFF,
  SYMBOL_LIGATURES_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_SYMBOL_LIGATURES_ON,
  SYMBOL_LIGATURES_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_SYMBOL_LIGATURES_OFF,
  CONTEXTUAL_LIGATURES_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_CONTEXTUAL_LIGATURES_ON,
  CONTEXTUAL_LIGATURES_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_CONTEXTUAL_LIGATURES_OFF,
  HISTORICAL_LIGATURES_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_HISTORICAL_LIGATURES_ON,
  HISTORICAL_LIGATURES_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_HISTORICAL_LIGATURES_OFF,
  UNCONNECTED_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_UNCONNECTED,
  PARTIALLY_CONNECTED_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_PARTIALLY_CONNECTED,
  CURSIVE_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_CURSIVE,
  UPPER_AND_LOWER_CASE_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_UPPER_AND_LOWER_CASE,
  ALL_CAPS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_ALL_CAPS,
  ALL_LOWER_CASE_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_ALL_LOWER_CASE,
  SMALL_CAPS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_SMALL_CAPS,
  INITIAL_CAPS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_INITIAL_CAPS,
  INITIAL_CAPS_AND_SMALL_CAPS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_INITIAL_CAPS_AND_SMALL_CAPS,
  SUBSTITUTE_VERTICAL_FORMS_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_SUBSTITUTE_VERTICAL_FORMS_ON,
  SUBSTITUTE_VERTICAL_FORMS_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_SUBSTITUTE_VERTICAL_FORMS_OFF,
  LINGUISTIC_REARRANGEMENT_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_LINGUISTIC_REARRANGEMENT_ON,
  LINGUISTIC_REARRANGEMENT_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_LINGUISTIC_REARRANGEMENT_OFF,
  MONOSPACED_NUMBERS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_MONOSPACED_NUMBERS,
  PROPORTIONAL_NUMBERS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_PROPORTIONAL_NUMBERS,
  THIRD_WIDTH_NUMBERS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_THIRD_WIDTH_NUMBERS,
  QUARTER_WIDTH_NUMBERS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_QUARTER_WIDTH_NUMBERS,
  WORD_INITIAL_SWASHES_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_WORD_INITIAL_SWASHES_ON,
  WORD_INITIAL_SWASHES_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_WORD_INITIAL_SWASHES_OFF,
  WORD_FINAL_SWASHES_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_WORD_FINAL_SWASHES_ON,
  WORD_FINAL_SWASHES_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_WORD_FINAL_SWASHES_OFF,
  LINE_INITIAL_SWASHES_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_LINE_INITIAL_SWASHES_ON,
  LINE_INITIAL_SWASHES_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_LINE_INITIAL_SWASHES_OFF,
  LINE_FINAL_SWASHES_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_LINE_FINAL_SWASHES_ON,
  LINE_FINAL_SWASHES_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_LINE_FINAL_SWASHES_OFF,
  NON_FINAL_SWASHES_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_NON_FINAL_SWASHES_ON,
  NON_FINAL_SWASHES_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_NON_FINAL_SWASHES_OFF,
  SHOW_DIACRITICS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_SHOW_DIACRITICS,
  HIDE_DIACRITICS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_HIDE_DIACRITICS,
  DECOMPOSE_DIACRITICS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_DECOMPOSE_DIACRITICS,
  NORMAL_POSITION_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_NORMAL_POSITION,
  SUPERIORS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_SUPERIORS,
  INFERIORS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_INFERIORS,
  ORDINALS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_ORDINALS,
  SCIENTIFIC_INFERIORS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_SCIENTIFIC_INFERIORS,
  NO_FRACTIONS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_FRACTIONS,
  VERTICAL_FRACTIONS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_VERTICAL_FRACTIONS,
  DIAGONAL_FRACTIONS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_DIAGONAL_FRACTIONS,
  PREVENT_OVERLAP_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_PREVENT_OVERLAP_ON,
  PREVENT_OVERLAP_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_PREVENT_OVERLAP_OFF,
  HYPHENS_TO_EM_DASH_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_HYPHENS_TO_EM_DASH_ON,
  HYPHENS_TO_EM_DASH_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_HYPHENS_TO_EM_DASH_OFF,
  HYPHEN_TO_EN_DASH_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_HYPHEN_TO_EN_DASH_ON,
  HYPHEN_TO_EN_DASH_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_HYPHEN_TO_EN_DASH_OFF,
  SLASHED_ZERO_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_SLASHED_ZERO_ON,
  SLASHED_ZERO_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_SLASHED_ZERO_OFF,
  FORM_INTERROBANG_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_FORM_INTERROBANG_ON,
  FORM_INTERROBANG_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_FORM_INTERROBANG_OFF,
  SMART_QUOTES_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_SMART_QUOTES_ON,
  SMART_QUOTES_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_SMART_QUOTES_OFF,
  PERIODS_TO_ELLIPSIS_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_PERIODS_TO_ELLIPSIS_ON,
  PERIODS_TO_ELLIPSIS_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_PERIODS_TO_ELLIPSIS_OFF,
  HYPHEN_TO_MINUS_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_HYPHEN_TO_MINUS_ON,
  HYPHEN_TO_MINUS_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_HYPHEN_TO_MINUS_OFF,
  ASTERISK_TO_MULTIPLY_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_ASTERISK_TO_MULTIPLY_ON,
  ASTERISK_TO_MULTIPLY_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_ASTERISK_TO_MULTIPLY_OFF,
  SLASH_TO_DIVIDE_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_SLASH_TO_DIVIDE_ON,
  SLASH_TO_DIVIDE_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_SLASH_TO_DIVIDE_OFF,
  INEQUALITY_LIGATURES_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_INEQUALITY_LIGATURES_ON,
  INEQUALITY_LIGATURES_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_INEQUALITY_LIGATURES_OFF,
  EXPONENTS_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_EXPONENTS_ON,
  EXPONENTS_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_EXPONENTS_OFF,
  MATHEMATICAL_GREEK_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_MATHEMATICAL_GREEK_ON,
  MATHEMATICAL_GREEK_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_MATHEMATICAL_GREEK_OFF,
  NO_ORNAMENTS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_ORNAMENTS,
  DINGBATS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_DINGBATS,
  PI_CHARACTERS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_PI_CHARACTERS,
  FLEURONS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_FLEURONS,
  DECORATIVE_BORDERS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_DECORATIVE_BORDERS,
  INTERNATIONAL_SYMBOLS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_INTERNATIONAL_SYMBOLS,
  MATH_SYMBOLS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_MATH_SYMBOLS,
  NO_ALTERNATES_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_ALTERNATES,
  DESIGN_LEVEL1_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_DESIGN_LEVEL1,
  DESIGN_LEVEL2_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_DESIGN_LEVEL2,
  DESIGN_LEVEL3_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_DESIGN_LEVEL3,
  DESIGN_LEVEL4_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_DESIGN_LEVEL4,
  DESIGN_LEVEL5_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_DESIGN_LEVEL5,
  NO_STYLE_OPTIONS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_STYLE_OPTIONS,
  DISPLAY_TEXT_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_DISPLAY_TEXT,
  ENGRAVED_TEXT_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_ENGRAVED_TEXT,
  ILLUMINATED_CAPS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_ILLUMINATED_CAPS,
  TITLING_CAPS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_TITLING_CAPS,
  TALL_CAPS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_TALL_CAPS,
  TRADITIONAL_CHARACTERS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_TRADITIONAL_CHARACTERS,
  SIMPLIFIED_CHARACTERS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_SIMPLIFIED_CHARACTERS,
  JIS1978_CHARACTERS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_JIS1978_CHARACTERS,
  JIS1983_CHARACTERS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_JIS1983_CHARACTERS,
  JIS1990_CHARACTERS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_JIS1990_CHARACTERS,
  TRADITIONAL_ALT_ONE_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_TRADITIONAL_ALT_ONE,
  TRADITIONAL_ALT_TWO_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_TRADITIONAL_ALT_TWO,
  TRADITIONAL_ALT_THREE_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_TRADITIONAL_ALT_THREE,
  TRADITIONAL_ALT_FOUR_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_TRADITIONAL_ALT_FOUR,
  TRADITIONAL_ALT_FIVE_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_TRADITIONAL_ALT_FIVE,
  EXPERT_CHARACTERS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_EXPERT_CHARACTERS,
  JIS2004_CHARACTERS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_JIS2004_CHARACTERS,
  HOJO_CHARACTERS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_HOJO_CHARACTERS,
  NLCCHARACTERS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_NLCCHARACTERS,
  TRADITIONAL_NAMES_CHARACTERS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_TRADITIONAL_NAMES_CHARACTERS,
  LOWER_CASE_NUMBERS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_LOWER_CASE_NUMBERS,
  UPPER_CASE_NUMBERS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_UPPER_CASE_NUMBERS,
  PROPORTIONAL_TEXT_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_PROPORTIONAL_TEXT,
  MONOSPACED_TEXT_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_MONOSPACED_TEXT,
  HALF_WIDTH_TEXT_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_HALF_WIDTH_TEXT,
  THIRD_WIDTH_TEXT_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_THIRD_WIDTH_TEXT,
  QUARTER_WIDTH_TEXT_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_QUARTER_WIDTH_TEXT,
  ALT_PROPORTIONAL_TEXT_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_ALT_PROPORTIONAL_TEXT,
  ALT_HALF_WIDTH_TEXT_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_ALT_HALF_WIDTH_TEXT,
  NO_TRANSLITERATION_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_TRANSLITERATION,
  HANJA_TO_HANGUL_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_HANJA_TO_HANGUL,
  HIRAGANA_TO_KATAKANA_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_HIRAGANA_TO_KATAKANA,
  KATAKANA_TO_HIRAGANA_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_KATAKANA_TO_HIRAGANA,
  KANA_TO_ROMANIZATION_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_KANA_TO_ROMANIZATION,
  ROMANIZATION_TO_HIRAGANA_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_ROMANIZATION_TO_HIRAGANA,
  ROMANIZATION_TO_KATAKANA_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_ROMANIZATION_TO_KATAKANA,
  HANJA_TO_HANGUL_ALT_ONE_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_HANJA_TO_HANGUL_ALT_ONE,
  HANJA_TO_HANGUL_ALT_TWO_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_HANJA_TO_HANGUL_ALT_TWO,
  HANJA_TO_HANGUL_ALT_THREE_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_HANJA_TO_HANGUL_ALT_THREE,
  NO_ANNOTATION_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_ANNOTATION,
  BOX_ANNOTATION_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_BOX_ANNOTATION,
  ROUNDED_BOX_ANNOTATION_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_ROUNDED_BOX_ANNOTATION,
  CIRCLE_ANNOTATION_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_CIRCLE_ANNOTATION,
  INVERTED_CIRCLE_ANNOTATION_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_INVERTED_CIRCLE_ANNOTATION,
  PARENTHESIS_ANNOTATION_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_PARENTHESIS_ANNOTATION,
  PERIOD_ANNOTATION_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_PERIOD_ANNOTATION,
  ROMAN_NUMERAL_ANNOTATION_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_ROMAN_NUMERAL_ANNOTATION,
  DIAMOND_ANNOTATION_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_DIAMOND_ANNOTATION,
  INVERTED_BOX_ANNOTATION_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_INVERTED_BOX_ANNOTATION,
  INVERTED_ROUNDED_BOX_ANNOTATION_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_INVERTED_ROUNDED_BOX_ANNOTATION,
  FULL_WIDTH_KANA_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_FULL_WIDTH_KANA,
  PROPORTIONAL_KANA_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_PROPORTIONAL_KANA,
  FULL_WIDTH_IDEOGRAPHS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_FULL_WIDTH_IDEOGRAPHS,
  PROPORTIONAL_IDEOGRAPHS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_PROPORTIONAL_IDEOGRAPHS,
  HALF_WIDTH_IDEOGRAPHS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_HALF_WIDTH_IDEOGRAPHS,
  CANONICAL_COMPOSITION_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_CANONICAL_COMPOSITION_ON,
  CANONICAL_COMPOSITION_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_CANONICAL_COMPOSITION_OFF,
  COMPATIBILITY_COMPOSITION_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_COMPATIBILITY_COMPOSITION_ON,
  COMPATIBILITY_COMPOSITION_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_COMPATIBILITY_COMPOSITION_OFF,
  TRANSCODING_COMPOSITION_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_TRANSCODING_COMPOSITION_ON,
  TRANSCODING_COMPOSITION_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_TRANSCODING_COMPOSITION_OFF,
  NO_RUBY_KANA_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_RUBY_KANA,
  RUBY_KANA_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_RUBY_KANA,
  RUBY_KANA_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_RUBY_KANA_ON,
  RUBY_KANA_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_RUBY_KANA_OFF,
  NO_CJK_SYMBOL_ALTERNATIVES_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_CJK_SYMBOL_ALTERNATIVES,
  CJK_SYMBOL_ALT_ONE_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_SYMBOL_ALT_ONE,
  CJK_SYMBOL_ALT_TWO_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_SYMBOL_ALT_TWO,
  CJK_SYMBOL_ALT_THREE_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_SYMBOL_ALT_THREE,
  CJK_SYMBOL_ALT_FOUR_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_SYMBOL_ALT_FOUR,
  CJK_SYMBOL_ALT_FIVE_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_SYMBOL_ALT_FIVE,
  NO_IDEOGRAPHIC_ALTERNATIVES_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_IDEOGRAPHIC_ALTERNATIVES,
  IDEOGRAPHIC_ALT_ONE_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_IDEOGRAPHIC_ALT_ONE,
  IDEOGRAPHIC_ALT_TWO_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_IDEOGRAPHIC_ALT_TWO,
  IDEOGRAPHIC_ALT_THREE_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_IDEOGRAPHIC_ALT_THREE,
  IDEOGRAPHIC_ALT_FOUR_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_IDEOGRAPHIC_ALT_FOUR,
  IDEOGRAPHIC_ALT_FIVE_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_IDEOGRAPHIC_ALT_FIVE,
  CJK_VERTICAL_ROMAN_CENTERED_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_VERTICAL_ROMAN_CENTERED,
  CJK_VERTICAL_ROMAN_HBASELINE_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_VERTICAL_ROMAN_HBASELINE,
  NO_CJK_ITALIC_ROMAN_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_CJK_ITALIC_ROMAN,
  CJK_ITALIC_ROMAN_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_ITALIC_ROMAN,
  CJK_ITALIC_ROMAN_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_ITALIC_ROMAN_ON,
  CJK_ITALIC_ROMAN_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_ITALIC_ROMAN_OFF,
  CASE_SENSITIVE_LAYOUT_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_CASE_SENSITIVE_LAYOUT_ON,
  CASE_SENSITIVE_LAYOUT_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_CASE_SENSITIVE_LAYOUT_OFF,
  CASE_SENSITIVE_SPACING_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_CASE_SENSITIVE_SPACING_ON,
  CASE_SENSITIVE_SPACING_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_CASE_SENSITIVE_SPACING_OFF,
  ALTERNATE_HORIZ_KANA_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_ALTERNATE_HORIZ_KANA_ON,
  ALTERNATE_HORIZ_KANA_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_ALTERNATE_HORIZ_KANA_OFF,
  ALTERNATE_VERT_KANA_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_ALTERNATE_VERT_KANA_ON,
  ALTERNATE_VERT_KANA_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_ALTERNATE_VERT_KANA_OFF,
  NO_STYLISTIC_ALTERNATES_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_STYLISTIC_ALTERNATES,
  STYLISTIC_ALT_ONE_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_ONE_ON,
  STYLISTIC_ALT_ONE_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_ONE_OFF,
  STYLISTIC_ALT_TWO_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_TWO_ON,
  STYLISTIC_ALT_TWO_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_TWO_OFF,
  STYLISTIC_ALT_THREE_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_THREE_ON,
  STYLISTIC_ALT_THREE_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_THREE_OFF,
  STYLISTIC_ALT_FOUR_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_FOUR_ON,
  STYLISTIC_ALT_FOUR_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_FOUR_OFF,
  STYLISTIC_ALT_FIVE_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_FIVE_ON,
  STYLISTIC_ALT_FIVE_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_FIVE_OFF,
  STYLISTIC_ALT_SIX_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_SIX_ON,
  STYLISTIC_ALT_SIX_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_SIX_OFF,
  STYLISTIC_ALT_SEVEN_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_SEVEN_ON,
  STYLISTIC_ALT_SEVEN_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_SEVEN_OFF,
  STYLISTIC_ALT_EIGHT_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_EIGHT_ON,
  STYLISTIC_ALT_EIGHT_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_EIGHT_OFF,
  STYLISTIC_ALT_NINE_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_NINE_ON,
  STYLISTIC_ALT_NINE_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_NINE_OFF,
  STYLISTIC_ALT_TEN_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_TEN_ON,
  STYLISTIC_ALT_TEN_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_TEN_OFF,
  STYLISTIC_ALT_ELEVEN_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_ELEVEN_ON,
  STYLISTIC_ALT_ELEVEN_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_ELEVEN_OFF,
  STYLISTIC_ALT_TWELVE_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_TWELVE_ON,
  STYLISTIC_ALT_TWELVE_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_TWELVE_OFF,
  STYLISTIC_ALT_THIRTEEN_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_THIRTEEN_ON,
  STYLISTIC_ALT_THIRTEEN_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_THIRTEEN_OFF,
  STYLISTIC_ALT_FOURTEEN_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_FOURTEEN_ON,
  STYLISTIC_ALT_FOURTEEN_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_FOURTEEN_OFF,
  STYLISTIC_ALT_FIFTEEN_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_FIFTEEN_ON,
  STYLISTIC_ALT_FIFTEEN_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_FIFTEEN_OFF,
  STYLISTIC_ALT_SIXTEEN_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_SIXTEEN_ON,
  STYLISTIC_ALT_SIXTEEN_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_SIXTEEN_OFF,
  STYLISTIC_ALT_SEVENTEEN_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_SEVENTEEN_ON,
  STYLISTIC_ALT_SEVENTEEN_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_SEVENTEEN_OFF,
  STYLISTIC_ALT_EIGHTEEN_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_EIGHTEEN_ON,
  STYLISTIC_ALT_EIGHTEEN_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_EIGHTEEN_OFF,
  STYLISTIC_ALT_NINETEEN_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_NINETEEN_ON,
  STYLISTIC_ALT_NINETEEN_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_NINETEEN_OFF,
  STYLISTIC_ALT_TWENTY_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_TWENTY_ON,
  STYLISTIC_ALT_TWENTY_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_TWENTY_OFF,
  CONTEXTUAL_ALTERNATES_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_CONTEXTUAL_ALTERNATES_ON,
  CONTEXTUAL_ALTERNATES_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_CONTEXTUAL_ALTERNATES_OFF,
  SWASH_ALTERNATES_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_SWASH_ALTERNATES_ON,
  SWASH_ALTERNATES_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_SWASH_ALTERNATES_OFF,
  CONTEXTUAL_SWASH_ALTERNATES_ON_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_CONTEXTUAL_SWASH_ALTERNATES_ON,
  CONTEXTUAL_SWASH_ALTERNATES_OFF_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_CONTEXTUAL_SWASH_ALTERNATES_OFF,
  DEFAULT_LOWER_CASE_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_DEFAULT_LOWER_CASE,
  LOWER_CASE_SMALL_CAPS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_LOWER_CASE_SMALL_CAPS,
  LOWER_CASE_PETITE_CAPS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_LOWER_CASE_PETITE_CAPS,
  DEFAULT_UPPER_CASE_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_DEFAULT_UPPER_CASE,
  UPPER_CASE_SMALL_CAPS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_UPPER_CASE_SMALL_CAPS,
  UPPER_CASE_PETITE_CAPS_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_UPPER_CASE_PETITE_CAPS,
  HALF_WIDTH_CJK_ROMAN_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_HALF_WIDTH_CJK_ROMAN,
  PROPORTIONAL_CJK_ROMAN_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_PROPORTIONAL_CJK_ROMAN,
  DEFAULT_CJK_ROMAN_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_DEFAULT_CJK_ROMAN,
  FULL_WIDTH_CJK_ROMAN_ = HB_AAT_LAYOUT_FEATURE_SELECTOR_FULL_WIDTH_CJK_ROMAN,
};

} // namespace HarfBuzz

} // namespace repository

} // namespace gi

namespace gi {

namespace repository {

template<> struct declare_ctype_of<HarfBuzz::aat_layout_feature_selector_t>
{ typedef hb_aat_layout_feature_selector_t type; }; 
template<> struct declare_cpptype_of<hb_aat_layout_feature_selector_t>
{ typedef HarfBuzz::aat_layout_feature_selector_t type; }; 

template<> struct declare_gtype_of<HarfBuzz::aat_layout_feature_selector_t>
{ static GType get_type() { return hb_gobject_aat_layout_feature_selector_get_type(); } };


} // namespace repository

} // namespace gi


namespace gi {

namespace repository {

namespace HarfBuzz {

enum class aat_layout_feature_type_t {
  INVALID_ = HB_AAT_LAYOUT_FEATURE_TYPE_INVALID,
  ALL_TYPOGRAPHIC_ = HB_AAT_LAYOUT_FEATURE_TYPE_ALL_TYPOGRAPHIC,
  LIGATURES_ = HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES,
  CURISVE_CONNECTION_ = HB_AAT_LAYOUT_FEATURE_TYPE_CURISVE_CONNECTION,
  LETTER_CASE_ = HB_AAT_LAYOUT_FEATURE_TYPE_LETTER_CASE,
  VERTICAL_SUBSTITUTION_ = HB_AAT_LAYOUT_FEATURE_TYPE_VERTICAL_SUBSTITUTION,
  LINGUISTIC_REARRANGEMENT_ = HB_AAT_LAYOUT_FEATURE_TYPE_LINGUISTIC_REARRANGEMENT,
  NUMBER_SPACING_ = HB_AAT_LAYOUT_FEATURE_TYPE_NUMBER_SPACING,
  SMART_SWASH_TYPE_ = HB_AAT_LAYOUT_FEATURE_TYPE_SMART_SWASH_TYPE,
  DIACRITICS_TYPE_ = HB_AAT_LAYOUT_FEATURE_TYPE_DIACRITICS_TYPE,
  VERTICAL_POSITION_ = HB_AAT_LAYOUT_FEATURE_TYPE_VERTICAL_POSITION,
  FRACTIONS_ = HB_AAT_LAYOUT_FEATURE_TYPE_FRACTIONS,
  OVERLAPPING_CHARACTERS_TYPE_ = HB_AAT_LAYOUT_FEATURE_TYPE_OVERLAPPING_CHARACTERS_TYPE,
  TYPOGRAPHIC_EXTRAS_ = HB_AAT_LAYOUT_FEATURE_TYPE_TYPOGRAPHIC_EXTRAS,
  MATHEMATICAL_EXTRAS_ = HB_AAT_LAYOUT_FEATURE_TYPE_MATHEMATICAL_EXTRAS,
  ORNAMENT_SETS_TYPE_ = HB_AAT_LAYOUT_FEATURE_TYPE_ORNAMENT_SETS_TYPE,
  CHARACTER_ALTERNATIVES_ = HB_AAT_LAYOUT_FEATURE_TYPE_CHARACTER_ALTERNATIVES,
  DESIGN_COMPLEXITY_TYPE_ = HB_AAT_LAYOUT_FEATURE_TYPE_DESIGN_COMPLEXITY_TYPE,
  STYLE_OPTIONS_ = HB_AAT_LAYOUT_FEATURE_TYPE_STYLE_OPTIONS,
  CHARACTER_SHAPE_ = HB_AAT_LAYOUT_FEATURE_TYPE_CHARACTER_SHAPE,
  NUMBER_CASE_ = HB_AAT_LAYOUT_FEATURE_TYPE_NUMBER_CASE,
  TEXT_SPACING_ = HB_AAT_LAYOUT_FEATURE_TYPE_TEXT_SPACING,
  TRANSLITERATION_ = HB_AAT_LAYOUT_FEATURE_TYPE_TRANSLITERATION,
  ANNOTATION_TYPE_ = HB_AAT_LAYOUT_FEATURE_TYPE_ANNOTATION_TYPE,
  KANA_SPACING_TYPE_ = HB_AAT_LAYOUT_FEATURE_TYPE_KANA_SPACING_TYPE,
  IDEOGRAPHIC_SPACING_TYPE_ = HB_AAT_LAYOUT_FEATURE_TYPE_IDEOGRAPHIC_SPACING_TYPE,
  UNICODE_DECOMPOSITION_TYPE_ = HB_AAT_LAYOUT_FEATURE_TYPE_UNICODE_DECOMPOSITION_TYPE,
  RUBY_KANA_ = HB_AAT_LAYOUT_FEATURE_TYPE_RUBY_KANA,
  CJK_SYMBOL_ALTERNATIVES_TYPE_ = HB_AAT_LAYOUT_FEATURE_TYPE_CJK_SYMBOL_ALTERNATIVES_TYPE,
  IDEOGRAPHIC_ALTERNATIVES_TYPE_ = HB_AAT_LAYOUT_FEATURE_TYPE_IDEOGRAPHIC_ALTERNATIVES_TYPE,
  CJK_VERTICAL_ROMAN_PLACEMENT_TYPE_ = HB_AAT_LAYOUT_FEATURE_TYPE_CJK_VERTICAL_ROMAN_PLACEMENT_TYPE,
  ITALIC_CJK_ROMAN_ = HB_AAT_LAYOUT_FEATURE_TYPE_ITALIC_CJK_ROMAN,
  CASE_SENSITIVE_LAYOUT_ = HB_AAT_LAYOUT_FEATURE_TYPE_CASE_SENSITIVE_LAYOUT,
  ALTERNATE_KANA_ = HB_AAT_LAYOUT_FEATURE_TYPE_ALTERNATE_KANA,
  STYLISTIC_ALTERNATIVES_ = HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES,
  CONTEXTUAL_ALTERNATIVES_ = HB_AAT_LAYOUT_FEATURE_TYPE_CONTEXTUAL_ALTERNATIVES,
  LOWER_CASE_ = HB_AAT_LAYOUT_FEATURE_TYPE_LOWER_CASE,
  UPPER_CASE_ = HB_AAT_LAYOUT_FEATURE_TYPE_UPPER_CASE,
  LANGUAGE_TAG_TYPE_ = HB_AAT_LAYOUT_FEATURE_TYPE_LANGUAGE_TAG_TYPE,
  CJK_ROMAN_SPACING_TYPE_ = HB_AAT_LAYOUT_FEATURE_TYPE_CJK_ROMAN_SPACING_TYPE,
};

} // namespace HarfBuzz

} // namespace repository

} // namespace gi

namespace gi {

namespace repository {

template<> struct declare_ctype_of<HarfBuzz::aat_layout_feature_type_t>
{ typedef hb_aat_layout_feature_type_t type; }; 
template<> struct declare_cpptype_of<hb_aat_layout_feature_type_t>
{ typedef HarfBuzz::aat_layout_feature_type_t type; }; 

template<> struct declare_gtype_of<HarfBuzz::aat_layout_feature_type_t>
{ static GType get_type() { return hb_gobject_aat_layout_feature_type_get_type(); } };


} // namespace repository

} // namespace gi


namespace gi {

namespace repository {

namespace HarfBuzz {

enum class buffer_cluster_level_t {
  MONOTONE_GRAPHEMES_ = HB_BUFFER_CLUSTER_LEVEL_MONOTONE_GRAPHEMES,
  MONOTONE_CHARACTERS_ = HB_BUFFER_CLUSTER_LEVEL_MONOTONE_CHARACTERS,
  CHARACTERS_ = HB_BUFFER_CLUSTER_LEVEL_CHARACTERS,
  DEFAULT_ = HB_BUFFER_CLUSTER_LEVEL_DEFAULT,
};

} // namespace HarfBuzz

} // namespace repository

} // namespace gi

namespace gi {

namespace repository {

template<> struct declare_ctype_of<HarfBuzz::buffer_cluster_level_t>
{ typedef hb_buffer_cluster_level_t type; }; 
template<> struct declare_cpptype_of<hb_buffer_cluster_level_t>
{ typedef HarfBuzz::buffer_cluster_level_t type; }; 

template<> struct declare_gtype_of<HarfBuzz::buffer_cluster_level_t>
{ static GType get_type() { return hb_gobject_buffer_cluster_level_get_type(); } };


} // namespace repository

} // namespace gi


namespace gi {

namespace repository {

namespace HarfBuzz {

enum class buffer_content_type_t {
  INVALID_ = HB_BUFFER_CONTENT_TYPE_INVALID,
  UNICODE_ = HB_BUFFER_CONTENT_TYPE_UNICODE,
  GLYPHS_ = HB_BUFFER_CONTENT_TYPE_GLYPHS,
};

} // namespace HarfBuzz

} // namespace repository

} // namespace gi

namespace gi {

namespace repository {

template<> struct declare_ctype_of<HarfBuzz::buffer_content_type_t>
{ typedef hb_buffer_content_type_t type; }; 
template<> struct declare_cpptype_of<hb_buffer_content_type_t>
{ typedef HarfBuzz::buffer_content_type_t type; }; 

template<> struct declare_gtype_of<HarfBuzz::buffer_content_type_t>
{ static GType get_type() { return hb_gobject_buffer_content_type_get_type(); } };


} // namespace repository

} // namespace gi


namespace gi {

namespace repository {

namespace HarfBuzz {

enum class buffer_serialize_format_t {
  TEXT_ = HB_BUFFER_SERIALIZE_FORMAT_TEXT,
  JSON_ = HB_BUFFER_SERIALIZE_FORMAT_JSON,
  INVALID_ = HB_BUFFER_SERIALIZE_FORMAT_INVALID,
};

} // namespace HarfBuzz

} // namespace repository

} // namespace gi

namespace gi {

namespace repository {

template<> struct declare_ctype_of<HarfBuzz::buffer_serialize_format_t>
{ typedef hb_buffer_serialize_format_t type; }; 
template<> struct declare_cpptype_of<hb_buffer_serialize_format_t>
{ typedef HarfBuzz::buffer_serialize_format_t type; }; 

template<> struct declare_gtype_of<HarfBuzz::buffer_serialize_format_t>
{ static GType get_type() { return hb_gobject_buffer_serialize_format_get_type(); } };


} // namespace repository

} // namespace gi


namespace gi {

namespace repository {

namespace HarfBuzz {

enum class direction_t {
  INVALID_ = HB_DIRECTION_INVALID,
  LTR_ = HB_DIRECTION_LTR,
  RTL_ = HB_DIRECTION_RTL,
  TTB_ = HB_DIRECTION_TTB,
  BTT_ = HB_DIRECTION_BTT,
};

} // namespace HarfBuzz

} // namespace repository

} // namespace gi

namespace gi {

namespace repository {

template<> struct declare_ctype_of<HarfBuzz::direction_t>
{ typedef hb_direction_t type; }; 
template<> struct declare_cpptype_of<hb_direction_t>
{ typedef HarfBuzz::direction_t type; }; 

template<> struct declare_gtype_of<HarfBuzz::direction_t>
{ static GType get_type() { return hb_gobject_direction_get_type(); } };


} // namespace repository

} // namespace gi


namespace gi {

namespace repository {

namespace HarfBuzz {

enum class memory_mode_t {
  DUPLICATE_ = HB_MEMORY_MODE_DUPLICATE,
  READONLY_ = HB_MEMORY_MODE_READONLY,
  WRITABLE_ = HB_MEMORY_MODE_WRITABLE,
  READONLY_MAY_MAKE_WRITABLE_ = HB_MEMORY_MODE_READONLY_MAY_MAKE_WRITABLE,
};

} // namespace HarfBuzz

} // namespace repository

} // namespace gi

namespace gi {

namespace repository {

template<> struct declare_ctype_of<HarfBuzz::memory_mode_t>
{ typedef hb_memory_mode_t type; }; 
template<> struct declare_cpptype_of<hb_memory_mode_t>
{ typedef HarfBuzz::memory_mode_t type; }; 

template<> struct declare_gtype_of<HarfBuzz::memory_mode_t>
{ static GType get_type() { return hb_gobject_memory_mode_get_type(); } };


} // namespace repository

} // namespace gi


namespace gi {

namespace repository {

namespace HarfBuzz {

enum class ot_layout_baseline_tag_t {
  ROMAN_ = HB_OT_LAYOUT_BASELINE_TAG_ROMAN,
  HANGING_ = HB_OT_LAYOUT_BASELINE_TAG_HANGING,
  IDEO_FACE_BOTTOM_OR_LEFT_ = HB_OT_LAYOUT_BASELINE_TAG_IDEO_FACE_BOTTOM_OR_LEFT,
  IDEO_FACE_TOP_OR_RIGHT_ = HB_OT_LAYOUT_BASELINE_TAG_IDEO_FACE_TOP_OR_RIGHT,
  IDEO_EMBOX_BOTTOM_OR_LEFT_ = HB_OT_LAYOUT_BASELINE_TAG_IDEO_EMBOX_BOTTOM_OR_LEFT,
  IDEO_EMBOX_TOP_OR_RIGHT_ = HB_OT_LAYOUT_BASELINE_TAG_IDEO_EMBOX_TOP_OR_RIGHT,
  MATH_ = HB_OT_LAYOUT_BASELINE_TAG_MATH,
};

} // namespace HarfBuzz

} // namespace repository

} // namespace gi

namespace gi {

namespace repository {

template<> struct declare_ctype_of<HarfBuzz::ot_layout_baseline_tag_t>
{ typedef hb_ot_layout_baseline_tag_t type; }; 
template<> struct declare_cpptype_of<hb_ot_layout_baseline_tag_t>
{ typedef HarfBuzz::ot_layout_baseline_tag_t type; }; 

template<> struct declare_gtype_of<HarfBuzz::ot_layout_baseline_tag_t>
{ static GType get_type() { return hb_gobject_ot_layout_baseline_tag_get_type(); } };


} // namespace repository

} // namespace gi


namespace gi {

namespace repository {

namespace HarfBuzz {

enum class ot_layout_glyph_class_t {
  UNCLASSIFIED_ = HB_OT_LAYOUT_GLYPH_CLASS_UNCLASSIFIED,
  BASE_GLYPH_ = HB_OT_LAYOUT_GLYPH_CLASS_BASE_GLYPH,
  LIGATURE_ = HB_OT_LAYOUT_GLYPH_CLASS_LIGATURE,
  MARK_ = HB_OT_LAYOUT_GLYPH_CLASS_MARK,
  COMPONENT_ = HB_OT_LAYOUT_GLYPH_CLASS_COMPONENT,
};

} // namespace HarfBuzz

} // namespace repository

} // namespace gi

namespace gi {

namespace repository {

template<> struct declare_ctype_of<HarfBuzz::ot_layout_glyph_class_t>
{ typedef hb_ot_layout_glyph_class_t type; }; 
template<> struct declare_cpptype_of<hb_ot_layout_glyph_class_t>
{ typedef HarfBuzz::ot_layout_glyph_class_t type; }; 

template<> struct declare_gtype_of<HarfBuzz::ot_layout_glyph_class_t>
{ static GType get_type() { return hb_gobject_ot_layout_glyph_class_get_type(); } };


} // namespace repository

} // namespace gi


namespace gi {

namespace repository {

namespace HarfBuzz {

enum class ot_math_constant_t {
  SCRIPT_PERCENT_SCALE_DOWN_ = HB_OT_MATH_CONSTANT_SCRIPT_PERCENT_SCALE_DOWN,
  SCRIPT_SCRIPT_PERCENT_SCALE_DOWN_ = HB_OT_MATH_CONSTANT_SCRIPT_SCRIPT_PERCENT_SCALE_DOWN,
  DELIMITED_SUB_FORMULA_MIN_HEIGHT_ = HB_OT_MATH_CONSTANT_DELIMITED_SUB_FORMULA_MIN_HEIGHT,
  DISPLAY_OPERATOR_MIN_HEIGHT_ = HB_OT_MATH_CONSTANT_DISPLAY_OPERATOR_MIN_HEIGHT,
  MATH_LEADING_ = HB_OT_MATH_CONSTANT_MATH_LEADING,
  AXIS_HEIGHT_ = HB_OT_MATH_CONSTANT_AXIS_HEIGHT,
  ACCENT_BASE_HEIGHT_ = HB_OT_MATH_CONSTANT_ACCENT_BASE_HEIGHT,
  FLATTENED_ACCENT_BASE_HEIGHT_ = HB_OT_MATH_CONSTANT_FLATTENED_ACCENT_BASE_HEIGHT,
  SUBSCRIPT_SHIFT_DOWN_ = HB_OT_MATH_CONSTANT_SUBSCRIPT_SHIFT_DOWN,
  SUBSCRIPT_TOP_MAX_ = HB_OT_MATH_CONSTANT_SUBSCRIPT_TOP_MAX,
  SUBSCRIPT_BASELINE_DROP_MIN_ = HB_OT_MATH_CONSTANT_SUBSCRIPT_BASELINE_DROP_MIN,
  SUPERSCRIPT_SHIFT_UP_ = HB_OT_MATH_CONSTANT_SUPERSCRIPT_SHIFT_UP,
  SUPERSCRIPT_SHIFT_UP_CRAMPED_ = HB_OT_MATH_CONSTANT_SUPERSCRIPT_SHIFT_UP_CRAMPED,
  SUPERSCRIPT_BOTTOM_MIN_ = HB_OT_MATH_CONSTANT_SUPERSCRIPT_BOTTOM_MIN,
  SUPERSCRIPT_BASELINE_DROP_MAX_ = HB_OT_MATH_CONSTANT_SUPERSCRIPT_BASELINE_DROP_MAX,
  SUB_SUPERSCRIPT_GAP_MIN_ = HB_OT_MATH_CONSTANT_SUB_SUPERSCRIPT_GAP_MIN,
  SUPERSCRIPT_BOTTOM_MAX_WITH_SUBSCRIPT_ = HB_OT_MATH_CONSTANT_SUPERSCRIPT_BOTTOM_MAX_WITH_SUBSCRIPT,
  SPACE_AFTER_SCRIPT_ = HB_OT_MATH_CONSTANT_SPACE_AFTER_SCRIPT,
  UPPER_LIMIT_GAP_MIN_ = HB_OT_MATH_CONSTANT_UPPER_LIMIT_GAP_MIN,
  UPPER_LIMIT_BASELINE_RISE_MIN_ = HB_OT_MATH_CONSTANT_UPPER_LIMIT_BASELINE_RISE_MIN,
  LOWER_LIMIT_GAP_MIN_ = HB_OT_MATH_CONSTANT_LOWER_LIMIT_GAP_MIN,
  LOWER_LIMIT_BASELINE_DROP_MIN_ = HB_OT_MATH_CONSTANT_LOWER_LIMIT_BASELINE_DROP_MIN,
  STACK_TOP_SHIFT_UP_ = HB_OT_MATH_CONSTANT_STACK_TOP_SHIFT_UP,
  STACK_TOP_DISPLAY_STYLE_SHIFT_UP_ = HB_OT_MATH_CONSTANT_STACK_TOP_DISPLAY_STYLE_SHIFT_UP,
  STACK_BOTTOM_SHIFT_DOWN_ = HB_OT_MATH_CONSTANT_STACK_BOTTOM_SHIFT_DOWN,
  STACK_BOTTOM_DISPLAY_STYLE_SHIFT_DOWN_ = HB_OT_MATH_CONSTANT_STACK_BOTTOM_DISPLAY_STYLE_SHIFT_DOWN,
  STACK_GAP_MIN_ = HB_OT_MATH_CONSTANT_STACK_GAP_MIN,
  STACK_DISPLAY_STYLE_GAP_MIN_ = HB_OT_MATH_CONSTANT_STACK_DISPLAY_STYLE_GAP_MIN,
  STRETCH_STACK_TOP_SHIFT_UP_ = HB_OT_MATH_CONSTANT_STRETCH_STACK_TOP_SHIFT_UP,
  STRETCH_STACK_BOTTOM_SHIFT_DOWN_ = HB_OT_MATH_CONSTANT_STRETCH_STACK_BOTTOM_SHIFT_DOWN,
  STRETCH_STACK_GAP_ABOVE_MIN_ = HB_OT_MATH_CONSTANT_STRETCH_STACK_GAP_ABOVE_MIN,
  STRETCH_STACK_GAP_BELOW_MIN_ = HB_OT_MATH_CONSTANT_STRETCH_STACK_GAP_BELOW_MIN,
  FRACTION_NUMERATOR_SHIFT_UP_ = HB_OT_MATH_CONSTANT_FRACTION_NUMERATOR_SHIFT_UP,
  FRACTION_NUMERATOR_DISPLAY_STYLE_SHIFT_UP_ = HB_OT_MATH_CONSTANT_FRACTION_NUMERATOR_DISPLAY_STYLE_SHIFT_UP,
  FRACTION_DENOMINATOR_SHIFT_DOWN_ = HB_OT_MATH_CONSTANT_FRACTION_DENOMINATOR_SHIFT_DOWN,
  FRACTION_DENOMINATOR_DISPLAY_STYLE_SHIFT_DOWN_ = HB_OT_MATH_CONSTANT_FRACTION_DENOMINATOR_DISPLAY_STYLE_SHIFT_DOWN,
  FRACTION_NUMERATOR_GAP_MIN_ = HB_OT_MATH_CONSTANT_FRACTION_NUMERATOR_GAP_MIN,
  FRACTION_NUM_DISPLAY_STYLE_GAP_MIN_ = HB_OT_MATH_CONSTANT_FRACTION_NUM_DISPLAY_STYLE_GAP_MIN,
  FRACTION_RULE_THICKNESS_ = HB_OT_MATH_CONSTANT_FRACTION_RULE_THICKNESS,
  FRACTION_DENOMINATOR_GAP_MIN_ = HB_OT_MATH_CONSTANT_FRACTION_DENOMINATOR_GAP_MIN,
  FRACTION_DENOM_DISPLAY_STYLE_GAP_MIN_ = HB_OT_MATH_CONSTANT_FRACTION_DENOM_DISPLAY_STYLE_GAP_MIN,
  SKEWED_FRACTION_HORIZONTAL_GAP_ = HB_OT_MATH_CONSTANT_SKEWED_FRACTION_HORIZONTAL_GAP,
  SKEWED_FRACTION_VERTICAL_GAP_ = HB_OT_MATH_CONSTANT_SKEWED_FRACTION_VERTICAL_GAP,
  OVERBAR_VERTICAL_GAP_ = HB_OT_MATH_CONSTANT_OVERBAR_VERTICAL_GAP,
  OVERBAR_RULE_THICKNESS_ = HB_OT_MATH_CONSTANT_OVERBAR_RULE_THICKNESS,
  OVERBAR_EXTRA_ASCENDER_ = HB_OT_MATH_CONSTANT_OVERBAR_EXTRA_ASCENDER,
  UNDERBAR_VERTICAL_GAP_ = HB_OT_MATH_CONSTANT_UNDERBAR_VERTICAL_GAP,
  UNDERBAR_RULE_THICKNESS_ = HB_OT_MATH_CONSTANT_UNDERBAR_RULE_THICKNESS,
  UNDERBAR_EXTRA_DESCENDER_ = HB_OT_MATH_CONSTANT_UNDERBAR_EXTRA_DESCENDER,
  RADICAL_VERTICAL_GAP_ = HB_OT_MATH_CONSTANT_RADICAL_VERTICAL_GAP,
  RADICAL_DISPLAY_STYLE_VERTICAL_GAP_ = HB_OT_MATH_CONSTANT_RADICAL_DISPLAY_STYLE_VERTICAL_GAP,
  RADICAL_RULE_THICKNESS_ = HB_OT_MATH_CONSTANT_RADICAL_RULE_THICKNESS,
  RADICAL_EXTRA_ASCENDER_ = HB_OT_MATH_CONSTANT_RADICAL_EXTRA_ASCENDER,
  RADICAL_KERN_BEFORE_DEGREE_ = HB_OT_MATH_CONSTANT_RADICAL_KERN_BEFORE_DEGREE,
  RADICAL_KERN_AFTER_DEGREE_ = HB_OT_MATH_CONSTANT_RADICAL_KERN_AFTER_DEGREE,
  RADICAL_DEGREE_BOTTOM_RAISE_PERCENT_ = HB_OT_MATH_CONSTANT_RADICAL_DEGREE_BOTTOM_RAISE_PERCENT,
};

} // namespace HarfBuzz

} // namespace repository

} // namespace gi

namespace gi {

namespace repository {

template<> struct declare_ctype_of<HarfBuzz::ot_math_constant_t>
{ typedef hb_ot_math_constant_t type; }; 
template<> struct declare_cpptype_of<hb_ot_math_constant_t>
{ typedef HarfBuzz::ot_math_constant_t type; }; 

template<> struct declare_gtype_of<HarfBuzz::ot_math_constant_t>
{ static GType get_type() { return hb_gobject_ot_math_constant_get_type(); } };


} // namespace repository

} // namespace gi


namespace gi {

namespace repository {

namespace HarfBuzz {

enum class ot_math_kern_t {
  TOP_RIGHT_ = HB_OT_MATH_KERN_TOP_RIGHT,
  TOP_LEFT_ = HB_OT_MATH_KERN_TOP_LEFT,
  BOTTOM_RIGHT_ = HB_OT_MATH_KERN_BOTTOM_RIGHT,
  BOTTOM_LEFT_ = HB_OT_MATH_KERN_BOTTOM_LEFT,
};

} // namespace HarfBuzz

} // namespace repository

} // namespace gi

namespace gi {

namespace repository {

template<> struct declare_ctype_of<HarfBuzz::ot_math_kern_t>
{ typedef hb_ot_math_kern_t type; }; 
template<> struct declare_cpptype_of<hb_ot_math_kern_t>
{ typedef HarfBuzz::ot_math_kern_t type; }; 

template<> struct declare_gtype_of<HarfBuzz::ot_math_kern_t>
{ static GType get_type() { return hb_gobject_ot_math_kern_get_type(); } };


} // namespace repository

} // namespace gi


namespace gi {

namespace repository {

namespace HarfBuzz {

enum class ot_meta_tag_t {
  DESIGN_LANGUAGES_ = HB_OT_META_TAG_DESIGN_LANGUAGES,
  SUPPORTED_LANGUAGES_ = HB_OT_META_TAG_SUPPORTED_LANGUAGES,
};

} // namespace HarfBuzz

} // namespace repository

} // namespace gi

namespace gi {

namespace repository {

template<> struct declare_ctype_of<HarfBuzz::ot_meta_tag_t>
{ typedef hb_ot_meta_tag_t type; }; 
template<> struct declare_cpptype_of<hb_ot_meta_tag_t>
{ typedef HarfBuzz::ot_meta_tag_t type; }; 

template<> struct declare_gtype_of<HarfBuzz::ot_meta_tag_t>
{ static GType get_type() { return hb_gobject_ot_meta_tag_get_type(); } };


} // namespace repository

} // namespace gi


namespace gi {

namespace repository {

namespace HarfBuzz {

enum class ot_metrics_tag_t {
  HORIZONTAL_ASCENDER_ = HB_OT_METRICS_TAG_HORIZONTAL_ASCENDER,
  HORIZONTAL_DESCENDER_ = HB_OT_METRICS_TAG_HORIZONTAL_DESCENDER,
  HORIZONTAL_LINE_GAP_ = HB_OT_METRICS_TAG_HORIZONTAL_LINE_GAP,
  HORIZONTAL_CLIPPING_ASCENT_ = HB_OT_METRICS_TAG_HORIZONTAL_CLIPPING_ASCENT,
  HORIZONTAL_CLIPPING_DESCENT_ = HB_OT_METRICS_TAG_HORIZONTAL_CLIPPING_DESCENT,
  VERTICAL_ASCENDER_ = HB_OT_METRICS_TAG_VERTICAL_ASCENDER,
  VERTICAL_DESCENDER_ = HB_OT_METRICS_TAG_VERTICAL_DESCENDER,
  VERTICAL_LINE_GAP_ = HB_OT_METRICS_TAG_VERTICAL_LINE_GAP,
  HORIZONTAL_CARET_RISE_ = HB_OT_METRICS_TAG_HORIZONTAL_CARET_RISE,
  HORIZONTAL_CARET_RUN_ = HB_OT_METRICS_TAG_HORIZONTAL_CARET_RUN,
  HORIZONTAL_CARET_OFFSET_ = HB_OT_METRICS_TAG_HORIZONTAL_CARET_OFFSET,
  VERTICAL_CARET_RISE_ = HB_OT_METRICS_TAG_VERTICAL_CARET_RISE,
  VERTICAL_CARET_RUN_ = HB_OT_METRICS_TAG_VERTICAL_CARET_RUN,
  VERTICAL_CARET_OFFSET_ = HB_OT_METRICS_TAG_VERTICAL_CARET_OFFSET,
  X_HEIGHT_ = HB_OT_METRICS_TAG_X_HEIGHT,
  CAP_HEIGHT_ = HB_OT_METRICS_TAG_CAP_HEIGHT,
  SUBSCRIPT_EM_X_SIZE_ = HB_OT_METRICS_TAG_SUBSCRIPT_EM_X_SIZE,
  SUBSCRIPT_EM_Y_SIZE_ = HB_OT_METRICS_TAG_SUBSCRIPT_EM_Y_SIZE,
  SUBSCRIPT_EM_X_OFFSET_ = HB_OT_METRICS_TAG_SUBSCRIPT_EM_X_OFFSET,
  SUBSCRIPT_EM_Y_OFFSET_ = HB_OT_METRICS_TAG_SUBSCRIPT_EM_Y_OFFSET,
  SUPERSCRIPT_EM_X_SIZE_ = HB_OT_METRICS_TAG_SUPERSCRIPT_EM_X_SIZE,
  SUPERSCRIPT_EM_Y_SIZE_ = HB_OT_METRICS_TAG_SUPERSCRIPT_EM_Y_SIZE,
  SUPERSCRIPT_EM_X_OFFSET_ = HB_OT_METRICS_TAG_SUPERSCRIPT_EM_X_OFFSET,
  SUPERSCRIPT_EM_Y_OFFSET_ = HB_OT_METRICS_TAG_SUPERSCRIPT_EM_Y_OFFSET,
  STRIKEOUT_SIZE_ = HB_OT_METRICS_TAG_STRIKEOUT_SIZE,
  STRIKEOUT_OFFSET_ = HB_OT_METRICS_TAG_STRIKEOUT_OFFSET,
  UNDERLINE_SIZE_ = HB_OT_METRICS_TAG_UNDERLINE_SIZE,
  UNDERLINE_OFFSET_ = HB_OT_METRICS_TAG_UNDERLINE_OFFSET,
};

} // namespace HarfBuzz

} // namespace repository

} // namespace gi

namespace gi {

namespace repository {

template<> struct declare_ctype_of<HarfBuzz::ot_metrics_tag_t>
{ typedef hb_ot_metrics_tag_t type; }; 
template<> struct declare_cpptype_of<hb_ot_metrics_tag_t>
{ typedef HarfBuzz::ot_metrics_tag_t type; }; 

template<> struct declare_gtype_of<HarfBuzz::ot_metrics_tag_t>
{ static GType get_type() { return hb_gobject_ot_metrics_tag_get_type(); } };


} // namespace repository

} // namespace gi


namespace gi {

namespace repository {

namespace HarfBuzz {

enum class script_t {
  COMMON_ = HB_SCRIPT_COMMON,
  INHERITED_ = HB_SCRIPT_INHERITED,
  UNKNOWN_ = HB_SCRIPT_UNKNOWN,
  ARABIC_ = HB_SCRIPT_ARABIC,
  ARMENIAN_ = HB_SCRIPT_ARMENIAN,
  BENGALI_ = HB_SCRIPT_BENGALI,
  CYRILLIC_ = HB_SCRIPT_CYRILLIC,
  DEVANAGARI_ = HB_SCRIPT_DEVANAGARI,
  GEORGIAN_ = HB_SCRIPT_GEORGIAN,
  GREEK_ = HB_SCRIPT_GREEK,
  GUJARATI_ = HB_SCRIPT_GUJARATI,
  GURMUKHI_ = HB_SCRIPT_GURMUKHI,
  HANGUL_ = HB_SCRIPT_HANGUL,
  HAN_ = HB_SCRIPT_HAN,
  HEBREW_ = HB_SCRIPT_HEBREW,
  HIRAGANA_ = HB_SCRIPT_HIRAGANA,
  KANNADA_ = HB_SCRIPT_KANNADA,
  KATAKANA_ = HB_SCRIPT_KATAKANA,
  LAO_ = HB_SCRIPT_LAO,
  LATIN_ = HB_SCRIPT_LATIN,
  MALAYALAM_ = HB_SCRIPT_MALAYALAM,
  ORIYA_ = HB_SCRIPT_ORIYA,
  TAMIL_ = HB_SCRIPT_TAMIL,
  TELUGU_ = HB_SCRIPT_TELUGU,
  THAI_ = HB_SCRIPT_THAI,
  TIBETAN_ = HB_SCRIPT_TIBETAN,
  BOPOMOFO_ = HB_SCRIPT_BOPOMOFO,
  BRAILLE_ = HB_SCRIPT_BRAILLE,
  CANADIAN_SYLLABICS_ = HB_SCRIPT_CANADIAN_SYLLABICS,
  CHEROKEE_ = HB_SCRIPT_CHEROKEE,
  ETHIOPIC_ = HB_SCRIPT_ETHIOPIC,
  KHMER_ = HB_SCRIPT_KHMER,
  MONGOLIAN_ = HB_SCRIPT_MONGOLIAN,
  MYANMAR_ = HB_SCRIPT_MYANMAR,
  OGHAM_ = HB_SCRIPT_OGHAM,
  RUNIC_ = HB_SCRIPT_RUNIC,
  SINHALA_ = HB_SCRIPT_SINHALA,
  SYRIAC_ = HB_SCRIPT_SYRIAC,
  THAANA_ = HB_SCRIPT_THAANA,
  YI_ = HB_SCRIPT_YI,
  DESERET_ = HB_SCRIPT_DESERET,
  GOTHIC_ = HB_SCRIPT_GOTHIC,
  OLD_ITALIC_ = HB_SCRIPT_OLD_ITALIC,
  BUHID_ = HB_SCRIPT_BUHID,
  HANUNOO_ = HB_SCRIPT_HANUNOO,
  TAGALOG_ = HB_SCRIPT_TAGALOG,
  TAGBANWA_ = HB_SCRIPT_TAGBANWA,
  CYPRIOT_ = HB_SCRIPT_CYPRIOT,
  LIMBU_ = HB_SCRIPT_LIMBU,
  LINEAR_B_ = HB_SCRIPT_LINEAR_B,
  OSMANYA_ = HB_SCRIPT_OSMANYA,
  SHAVIAN_ = HB_SCRIPT_SHAVIAN,
  TAI_LE_ = HB_SCRIPT_TAI_LE,
  UGARITIC_ = HB_SCRIPT_UGARITIC,
  BUGINESE_ = HB_SCRIPT_BUGINESE,
  COPTIC_ = HB_SCRIPT_COPTIC,
  GLAGOLITIC_ = HB_SCRIPT_GLAGOLITIC,
  KHAROSHTHI_ = HB_SCRIPT_KHAROSHTHI,
  NEW_TAI_LUE_ = HB_SCRIPT_NEW_TAI_LUE,
  OLD_PERSIAN_ = HB_SCRIPT_OLD_PERSIAN,
  SYLOTI_NAGRI_ = HB_SCRIPT_SYLOTI_NAGRI,
  TIFINAGH_ = HB_SCRIPT_TIFINAGH,
  BALINESE_ = HB_SCRIPT_BALINESE,
  CUNEIFORM_ = HB_SCRIPT_CUNEIFORM,
  NKO_ = HB_SCRIPT_NKO,
  PHAGS_PA_ = HB_SCRIPT_PHAGS_PA,
  PHOENICIAN_ = HB_SCRIPT_PHOENICIAN,
  CARIAN_ = HB_SCRIPT_CARIAN,
  CHAM_ = HB_SCRIPT_CHAM,
  KAYAH_LI_ = HB_SCRIPT_KAYAH_LI,
  LEPCHA_ = HB_SCRIPT_LEPCHA,
  LYCIAN_ = HB_SCRIPT_LYCIAN,
  LYDIAN_ = HB_SCRIPT_LYDIAN,
  OL_CHIKI_ = HB_SCRIPT_OL_CHIKI,
  REJANG_ = HB_SCRIPT_REJANG,
  SAURASHTRA_ = HB_SCRIPT_SAURASHTRA,
  SUNDANESE_ = HB_SCRIPT_SUNDANESE,
  VAI_ = HB_SCRIPT_VAI,
  AVESTAN_ = HB_SCRIPT_AVESTAN,
  BAMUM_ = HB_SCRIPT_BAMUM,
  EGYPTIAN_HIEROGLYPHS_ = HB_SCRIPT_EGYPTIAN_HIEROGLYPHS,
  IMPERIAL_ARAMAIC_ = HB_SCRIPT_IMPERIAL_ARAMAIC,
  INSCRIPTIONAL_PAHLAVI_ = HB_SCRIPT_INSCRIPTIONAL_PAHLAVI,
  INSCRIPTIONAL_PARTHIAN_ = HB_SCRIPT_INSCRIPTIONAL_PARTHIAN,
  JAVANESE_ = HB_SCRIPT_JAVANESE,
  KAITHI_ = HB_SCRIPT_KAITHI,
  LISU_ = HB_SCRIPT_LISU,
  MEETEI_MAYEK_ = HB_SCRIPT_MEETEI_MAYEK,
  OLD_SOUTH_ARABIAN_ = HB_SCRIPT_OLD_SOUTH_ARABIAN,
  OLD_TURKIC_ = HB_SCRIPT_OLD_TURKIC,
  SAMARITAN_ = HB_SCRIPT_SAMARITAN,
  TAI_THAM_ = HB_SCRIPT_TAI_THAM,
  TAI_VIET_ = HB_SCRIPT_TAI_VIET,
  BATAK_ = HB_SCRIPT_BATAK,
  BRAHMI_ = HB_SCRIPT_BRAHMI,
  MANDAIC_ = HB_SCRIPT_MANDAIC,
  CHAKMA_ = HB_SCRIPT_CHAKMA,
  MEROITIC_CURSIVE_ = HB_SCRIPT_MEROITIC_CURSIVE,
  MEROITIC_HIEROGLYPHS_ = HB_SCRIPT_MEROITIC_HIEROGLYPHS,
  MIAO_ = HB_SCRIPT_MIAO,
  SHARADA_ = HB_SCRIPT_SHARADA,
  SORA_SOMPENG_ = HB_SCRIPT_SORA_SOMPENG,
  TAKRI_ = HB_SCRIPT_TAKRI,
  BASSA_VAH_ = HB_SCRIPT_BASSA_VAH,
  CAUCASIAN_ALBANIAN_ = HB_SCRIPT_CAUCASIAN_ALBANIAN,
  DUPLOYAN_ = HB_SCRIPT_DUPLOYAN,
  ELBASAN_ = HB_SCRIPT_ELBASAN,
  GRANTHA_ = HB_SCRIPT_GRANTHA,
  KHOJKI_ = HB_SCRIPT_KHOJKI,
  KHUDAWADI_ = HB_SCRIPT_KHUDAWADI,
  LINEAR_A_ = HB_SCRIPT_LINEAR_A,
  MAHAJANI_ = HB_SCRIPT_MAHAJANI,
  MANICHAEAN_ = HB_SCRIPT_MANICHAEAN,
  MENDE_KIKAKUI_ = HB_SCRIPT_MENDE_KIKAKUI,
  MODI_ = HB_SCRIPT_MODI,
  MRO_ = HB_SCRIPT_MRO,
  NABATAEAN_ = HB_SCRIPT_NABATAEAN,
  OLD_NORTH_ARABIAN_ = HB_SCRIPT_OLD_NORTH_ARABIAN,
  OLD_PERMIC_ = HB_SCRIPT_OLD_PERMIC,
  PAHAWH_HMONG_ = HB_SCRIPT_PAHAWH_HMONG,
  PALMYRENE_ = HB_SCRIPT_PALMYRENE,
  PAU_CIN_HAU_ = HB_SCRIPT_PAU_CIN_HAU,
  PSALTER_PAHLAVI_ = HB_SCRIPT_PSALTER_PAHLAVI,
  SIDDHAM_ = HB_SCRIPT_SIDDHAM,
  TIRHUTA_ = HB_SCRIPT_TIRHUTA,
  WARANG_CITI_ = HB_SCRIPT_WARANG_CITI,
  AHOM_ = HB_SCRIPT_AHOM,
  ANATOLIAN_HIEROGLYPHS_ = HB_SCRIPT_ANATOLIAN_HIEROGLYPHS,
  HATRAN_ = HB_SCRIPT_HATRAN,
  MULTANI_ = HB_SCRIPT_MULTANI,
  OLD_HUNGARIAN_ = HB_SCRIPT_OLD_HUNGARIAN,
  SIGNWRITING_ = HB_SCRIPT_SIGNWRITING,
  ADLAM_ = HB_SCRIPT_ADLAM,
  BHAIKSUKI_ = HB_SCRIPT_BHAIKSUKI,
  MARCHEN_ = HB_SCRIPT_MARCHEN,
  OSAGE_ = HB_SCRIPT_OSAGE,
  TANGUT_ = HB_SCRIPT_TANGUT,
  NEWA_ = HB_SCRIPT_NEWA,
  MASARAM_GONDI_ = HB_SCRIPT_MASARAM_GONDI,
  NUSHU_ = HB_SCRIPT_NUSHU,
  SOYOMBO_ = HB_SCRIPT_SOYOMBO,
  ZANABAZAR_SQUARE_ = HB_SCRIPT_ZANABAZAR_SQUARE,
  DOGRA_ = HB_SCRIPT_DOGRA,
  GUNJALA_GONDI_ = HB_SCRIPT_GUNJALA_GONDI,
  HANIFI_ROHINGYA_ = HB_SCRIPT_HANIFI_ROHINGYA,
  MAKASAR_ = HB_SCRIPT_MAKASAR,
  MEDEFAIDRIN_ = HB_SCRIPT_MEDEFAIDRIN,
  OLD_SOGDIAN_ = HB_SCRIPT_OLD_SOGDIAN,
  SOGDIAN_ = HB_SCRIPT_SOGDIAN,
  ELYMAIC_ = HB_SCRIPT_ELYMAIC,
  NANDINAGARI_ = HB_SCRIPT_NANDINAGARI,
  NYIAKENG_PUACHUE_HMONG_ = HB_SCRIPT_NYIAKENG_PUACHUE_HMONG,
  WANCHO_ = HB_SCRIPT_WANCHO,
  CHORASMIAN_ = HB_SCRIPT_CHORASMIAN,
  DIVES_AKURU_ = HB_SCRIPT_DIVES_AKURU,
  KHITAN_SMALL_SCRIPT_ = HB_SCRIPT_KHITAN_SMALL_SCRIPT,
  YEZIDI_ = HB_SCRIPT_YEZIDI,
  INVALID_ = HB_SCRIPT_INVALID,
};

} // namespace HarfBuzz

} // namespace repository

} // namespace gi

namespace gi {

namespace repository {

template<> struct declare_ctype_of<HarfBuzz::script_t>
{ typedef hb_script_t type; }; 
template<> struct declare_cpptype_of<hb_script_t>
{ typedef HarfBuzz::script_t type; }; 

template<> struct declare_gtype_of<HarfBuzz::script_t>
{ static GType get_type() { return hb_gobject_script_get_type(); } };


} // namespace repository

} // namespace gi


namespace gi {

namespace repository {

namespace HarfBuzz {

enum class unicode_combining_class_t {
  NOT_REORDERED_ = HB_UNICODE_COMBINING_CLASS_NOT_REORDERED,
  OVERLAY_ = HB_UNICODE_COMBINING_CLASS_OVERLAY,
  NUKTA_ = HB_UNICODE_COMBINING_CLASS_NUKTA,
  KANA_VOICING_ = HB_UNICODE_COMBINING_CLASS_KANA_VOICING,
  VIRAMA_ = HB_UNICODE_COMBINING_CLASS_VIRAMA,
  CCC10_ = HB_UNICODE_COMBINING_CLASS_CCC10,
  CCC11_ = HB_UNICODE_COMBINING_CLASS_CCC11,
  CCC12_ = HB_UNICODE_COMBINING_CLASS_CCC12,
  CCC13_ = HB_UNICODE_COMBINING_CLASS_CCC13,
  CCC14_ = HB_UNICODE_COMBINING_CLASS_CCC14,
  CCC15_ = HB_UNICODE_COMBINING_CLASS_CCC15,
  CCC16_ = HB_UNICODE_COMBINING_CLASS_CCC16,
  CCC17_ = HB_UNICODE_COMBINING_CLASS_CCC17,
  CCC18_ = HB_UNICODE_COMBINING_CLASS_CCC18,
  CCC19_ = HB_UNICODE_COMBINING_CLASS_CCC19,
  CCC20_ = HB_UNICODE_COMBINING_CLASS_CCC20,
  CCC21_ = HB_UNICODE_COMBINING_CLASS_CCC21,
  CCC22_ = HB_UNICODE_COMBINING_CLASS_CCC22,
  CCC23_ = HB_UNICODE_COMBINING_CLASS_CCC23,
  CCC24_ = HB_UNICODE_COMBINING_CLASS_CCC24,
  CCC25_ = HB_UNICODE_COMBINING_CLASS_CCC25,
  CCC26_ = HB_UNICODE_COMBINING_CLASS_CCC26,
  CCC27_ = HB_UNICODE_COMBINING_CLASS_CCC27,
  CCC28_ = HB_UNICODE_COMBINING_CLASS_CCC28,
  CCC29_ = HB_UNICODE_COMBINING_CLASS_CCC29,
  CCC30_ = HB_UNICODE_COMBINING_CLASS_CCC30,
  CCC31_ = HB_UNICODE_COMBINING_CLASS_CCC31,
  CCC32_ = HB_UNICODE_COMBINING_CLASS_CCC32,
  CCC33_ = HB_UNICODE_COMBINING_CLASS_CCC33,
  CCC34_ = HB_UNICODE_COMBINING_CLASS_CCC34,
  CCC35_ = HB_UNICODE_COMBINING_CLASS_CCC35,
  CCC36_ = HB_UNICODE_COMBINING_CLASS_CCC36,
  CCC84_ = HB_UNICODE_COMBINING_CLASS_CCC84,
  CCC91_ = HB_UNICODE_COMBINING_CLASS_CCC91,
  CCC103_ = HB_UNICODE_COMBINING_CLASS_CCC103,
  CCC107_ = HB_UNICODE_COMBINING_CLASS_CCC107,
  CCC118_ = HB_UNICODE_COMBINING_CLASS_CCC118,
  CCC122_ = HB_UNICODE_COMBINING_CLASS_CCC122,
  CCC129_ = HB_UNICODE_COMBINING_CLASS_CCC129,
  CCC130_ = HB_UNICODE_COMBINING_CLASS_CCC130,
  CCC133_ = HB_UNICODE_COMBINING_CLASS_CCC133,
  ATTACHED_BELOW_LEFT_ = HB_UNICODE_COMBINING_CLASS_ATTACHED_BELOW_LEFT,
  ATTACHED_BELOW_ = HB_UNICODE_COMBINING_CLASS_ATTACHED_BELOW,
  ATTACHED_ABOVE_ = HB_UNICODE_COMBINING_CLASS_ATTACHED_ABOVE,
  ATTACHED_ABOVE_RIGHT_ = HB_UNICODE_COMBINING_CLASS_ATTACHED_ABOVE_RIGHT,
  BELOW_LEFT_ = HB_UNICODE_COMBINING_CLASS_BELOW_LEFT,
  BELOW_ = HB_UNICODE_COMBINING_CLASS_BELOW,
  BELOW_RIGHT_ = HB_UNICODE_COMBINING_CLASS_BELOW_RIGHT,
  LEFT_ = HB_UNICODE_COMBINING_CLASS_LEFT,
  RIGHT_ = HB_UNICODE_COMBINING_CLASS_RIGHT,
  ABOVE_LEFT_ = HB_UNICODE_COMBINING_CLASS_ABOVE_LEFT,
  ABOVE_ = HB_UNICODE_COMBINING_CLASS_ABOVE,
  ABOVE_RIGHT_ = HB_UNICODE_COMBINING_CLASS_ABOVE_RIGHT,
  DOUBLE_BELOW_ = HB_UNICODE_COMBINING_CLASS_DOUBLE_BELOW,
  DOUBLE_ABOVE_ = HB_UNICODE_COMBINING_CLASS_DOUBLE_ABOVE,
  IOTA_SUBSCRIPT_ = HB_UNICODE_COMBINING_CLASS_IOTA_SUBSCRIPT,
  INVALID_ = HB_UNICODE_COMBINING_CLASS_INVALID,
};

} // namespace HarfBuzz

} // namespace repository

} // namespace gi

namespace gi {

namespace repository {

template<> struct declare_ctype_of<HarfBuzz::unicode_combining_class_t>
{ typedef hb_unicode_combining_class_t type; }; 
template<> struct declare_cpptype_of<hb_unicode_combining_class_t>
{ typedef HarfBuzz::unicode_combining_class_t type; }; 

template<> struct declare_gtype_of<HarfBuzz::unicode_combining_class_t>
{ static GType get_type() { return hb_gobject_unicode_combining_class_get_type(); } };


} // namespace repository

} // namespace gi


namespace gi {

namespace repository {

namespace HarfBuzz {

enum class unicode_general_category_t {
  CONTROL_ = HB_UNICODE_GENERAL_CATEGORY_CONTROL,
  FORMAT_ = HB_UNICODE_GENERAL_CATEGORY_FORMAT,
  UNASSIGNED_ = HB_UNICODE_GENERAL_CATEGORY_UNASSIGNED,
  PRIVATE_USE_ = HB_UNICODE_GENERAL_CATEGORY_PRIVATE_USE,
  SURROGATE_ = HB_UNICODE_GENERAL_CATEGORY_SURROGATE,
  LOWERCASE_LETTER_ = HB_UNICODE_GENERAL_CATEGORY_LOWERCASE_LETTER,
  MODIFIER_LETTER_ = HB_UNICODE_GENERAL_CATEGORY_MODIFIER_LETTER,
  OTHER_LETTER_ = HB_UNICODE_GENERAL_CATEGORY_OTHER_LETTER,
  TITLECASE_LETTER_ = HB_UNICODE_GENERAL_CATEGORY_TITLECASE_LETTER,
  UPPERCASE_LETTER_ = HB_UNICODE_GENERAL_CATEGORY_UPPERCASE_LETTER,
  SPACING_MARK_ = HB_UNICODE_GENERAL_CATEGORY_SPACING_MARK,
  ENCLOSING_MARK_ = HB_UNICODE_GENERAL_CATEGORY_ENCLOSING_MARK,
  NON_SPACING_MARK_ = HB_UNICODE_GENERAL_CATEGORY_NON_SPACING_MARK,
  DECIMAL_NUMBER_ = HB_UNICODE_GENERAL_CATEGORY_DECIMAL_NUMBER,
  LETTER_NUMBER_ = HB_UNICODE_GENERAL_CATEGORY_LETTER_NUMBER,
  OTHER_NUMBER_ = HB_UNICODE_GENERAL_CATEGORY_OTHER_NUMBER,
  CONNECT_PUNCTUATION_ = HB_UNICODE_GENERAL_CATEGORY_CONNECT_PUNCTUATION,
  DASH_PUNCTUATION_ = HB_UNICODE_GENERAL_CATEGORY_DASH_PUNCTUATION,
  CLOSE_PUNCTUATION_ = HB_UNICODE_GENERAL_CATEGORY_CLOSE_PUNCTUATION,
  FINAL_PUNCTUATION_ = HB_UNICODE_GENERAL_CATEGORY_FINAL_PUNCTUATION,
  INITIAL_PUNCTUATION_ = HB_UNICODE_GENERAL_CATEGORY_INITIAL_PUNCTUATION,
  OTHER_PUNCTUATION_ = HB_UNICODE_GENERAL_CATEGORY_OTHER_PUNCTUATION,
  OPEN_PUNCTUATION_ = HB_UNICODE_GENERAL_CATEGORY_OPEN_PUNCTUATION,
  CURRENCY_SYMBOL_ = HB_UNICODE_GENERAL_CATEGORY_CURRENCY_SYMBOL,
  MODIFIER_SYMBOL_ = HB_UNICODE_GENERAL_CATEGORY_MODIFIER_SYMBOL,
  MATH_SYMBOL_ = HB_UNICODE_GENERAL_CATEGORY_MATH_SYMBOL,
  OTHER_SYMBOL_ = HB_UNICODE_GENERAL_CATEGORY_OTHER_SYMBOL,
  LINE_SEPARATOR_ = HB_UNICODE_GENERAL_CATEGORY_LINE_SEPARATOR,
  PARAGRAPH_SEPARATOR_ = HB_UNICODE_GENERAL_CATEGORY_PARAGRAPH_SEPARATOR,
  SPACE_SEPARATOR_ = HB_UNICODE_GENERAL_CATEGORY_SPACE_SEPARATOR,
};

} // namespace HarfBuzz

} // namespace repository

} // namespace gi

namespace gi {

namespace repository {

template<> struct declare_ctype_of<HarfBuzz::unicode_general_category_t>
{ typedef hb_unicode_general_category_t type; }; 
template<> struct declare_cpptype_of<hb_unicode_general_category_t>
{ typedef HarfBuzz::unicode_general_category_t type; }; 

template<> struct declare_gtype_of<HarfBuzz::unicode_general_category_t>
{ static GType get_type() { return hb_gobject_unicode_general_category_get_type(); } };


} // namespace repository

} // namespace gi


#endif
